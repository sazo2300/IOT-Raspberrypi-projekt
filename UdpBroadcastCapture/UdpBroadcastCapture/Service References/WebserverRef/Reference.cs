//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UdpBroadcastCapture.WebserverRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Raspberrypoop", Namespace="http://schemas.datacontract.org/2004/07/GalEnWebberService")]
    [System.SerializableAttribute()]
    public partial class Raspberrypoop : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> lysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> tempField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> lys {
            get {
                return this.lysField;
            }
            set {
                if ((this.lysField.Equals(value) != true)) {
                    this.lysField = value;
                    this.RaisePropertyChanged("lys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> temp {
            get {
                return this.tempField;
            }
            set {
                if ((this.tempField.Equals(value) != true)) {
                    this.tempField = value;
                    this.RaisePropertyChanged("temp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/GalEnWebberService")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> tsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ts {
            get {
                return this.tsField;
            }
            set {
                if ((this.tsField.Equals(value) != true)) {
                    this.tsField = value;
                    this.RaisePropertyChanged("ts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebserverRef.IStudentService")]
    public interface IStudentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/InsertData", ReplyAction="http://tempuri.org/IStudentService/InsertDataResponse")]
        void InsertData(UdpBroadcastCapture.WebserverRef.Raspberrypoop rasp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/InsertData", ReplyAction="http://tempuri.org/IStudentService/InsertDataResponse")]
        System.Threading.Tasks.Task InsertDataAsync(UdpBroadcastCapture.WebserverRef.Raspberrypoop rasp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/AddStudent", ReplyAction="http://tempuri.org/IStudentService/AddStudentResponse")]
        void AddStudent(UdpBroadcastCapture.WebserverRef.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/AddStudent", ReplyAction="http://tempuri.org/IStudentService/AddStudentResponse")]
        System.Threading.Tasks.Task AddStudentAsync(UdpBroadcastCapture.WebserverRef.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/FindStudent", ReplyAction="http://tempuri.org/IStudentService/FindStudentResponse")]
        UdpBroadcastCapture.WebserverRef.Student FindStudent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/FindStudent", ReplyAction="http://tempuri.org/IStudentService/FindStudentResponse")]
        System.Threading.Tasks.Task<UdpBroadcastCapture.WebserverRef.Student> FindStudentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/RemoveStudent", ReplyAction="http://tempuri.org/IStudentService/RemoveStudentResponse")]
        void RemoveStudent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/RemoveStudent", ReplyAction="http://tempuri.org/IStudentService/RemoveStudentResponse")]
        System.Threading.Tasks.Task RemoveStudentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/EditStudent", ReplyAction="http://tempuri.org/IStudentService/EditStudentResponse")]
        void EditStudent(int id, UdpBroadcastCapture.WebserverRef.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/EditStudent", ReplyAction="http://tempuri.org/IStudentService/EditStudentResponse")]
        System.Threading.Tasks.Task EditStudentAsync(int id, UdpBroadcastCapture.WebserverRef.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetAllStudents", ReplyAction="http://tempuri.org/IStudentService/GetAllStudentsResponse")]
        UdpBroadcastCapture.WebserverRef.Student[] GetAllStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetAllStudents", ReplyAction="http://tempuri.org/IStudentService/GetAllStudentsResponse")]
        System.Threading.Tasks.Task<UdpBroadcastCapture.WebserverRef.Student[]> GetAllStudentsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentServiceChannel : UdpBroadcastCapture.WebserverRef.IStudentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentServiceClient : System.ServiceModel.ClientBase<UdpBroadcastCapture.WebserverRef.IStudentService>, UdpBroadcastCapture.WebserverRef.IStudentService {
        
        public StudentServiceClient() {
        }
        
        public StudentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void InsertData(UdpBroadcastCapture.WebserverRef.Raspberrypoop rasp) {
            base.Channel.InsertData(rasp);
        }
        
        public System.Threading.Tasks.Task InsertDataAsync(UdpBroadcastCapture.WebserverRef.Raspberrypoop rasp) {
            return base.Channel.InsertDataAsync(rasp);
        }
        
        public void AddStudent(UdpBroadcastCapture.WebserverRef.Student student) {
            base.Channel.AddStudent(student);
        }
        
        public System.Threading.Tasks.Task AddStudentAsync(UdpBroadcastCapture.WebserverRef.Student student) {
            return base.Channel.AddStudentAsync(student);
        }
        
        public UdpBroadcastCapture.WebserverRef.Student FindStudent(int id) {
            return base.Channel.FindStudent(id);
        }
        
        public System.Threading.Tasks.Task<UdpBroadcastCapture.WebserverRef.Student> FindStudentAsync(int id) {
            return base.Channel.FindStudentAsync(id);
        }
        
        public void RemoveStudent(int id) {
            base.Channel.RemoveStudent(id);
        }
        
        public System.Threading.Tasks.Task RemoveStudentAsync(int id) {
            return base.Channel.RemoveStudentAsync(id);
        }
        
        public void EditStudent(int id, UdpBroadcastCapture.WebserverRef.Student student) {
            base.Channel.EditStudent(id, student);
        }
        
        public System.Threading.Tasks.Task EditStudentAsync(int id, UdpBroadcastCapture.WebserverRef.Student student) {
            return base.Channel.EditStudentAsync(id, student);
        }
        
        public UdpBroadcastCapture.WebserverRef.Student[] GetAllStudents() {
            return base.Channel.GetAllStudents();
        }
        
        public System.Threading.Tasks.Task<UdpBroadcastCapture.WebserverRef.Student[]> GetAllStudentsAsync() {
            return base.Channel.GetAllStudentsAsync();
        }
    }
}
